/**
 * Reset some basic elements
 */
body, h1, h2, h3, h4, h5, h6,
p, blockquote, pre, hr,
dl, dd, ol, ul, figure {
  margin: 0;
  padding: 0;
}
/**
 * Basic styling
 */
html {
  font: $base-font-weight #{$base-font-size-fixed}/#{$base-line-height} $base-font-family;
  @include media-query($media-min) {
    font-size: $base-font-size;
  }
  @include media-query($media-max) {
    font-size: $max-font-size-fixed;
  }
}
body {
  @include cssVar(color, --text, $text-color);
  @include cssVar(background-color, --bg, $background-color);

  transition: 0.2s background-color ease(out-cubic);
  //background: linear-gradient(135deg, $background-color 0%,$background-color-2 100%);
  //background: linear-gradient(135deg, var(--bg) 0%,var(--bg-2) 100%);

  -webkit-text-size-adjust: 100%;
  -webkit-font-feature-settings: "kern" 1;
  -moz-font-feature-settings: "kern" 1;
  -o-font-feature-settings: "kern" 1;
  font-feature-settings: "kern" 1;
  font-kerning: normal;
}

/**
 * Set `margin-bottom` to maintain vertical rhythm
 */
h1, h2, h3, h4, h5, h6,
p, blockquote, pre, hr,
ul, ol, dl, figure,
%vertical-rhythm {
  margin-bottom: $spacing-unit;
  
  &:last-child {
    margin-bottom: 0;
  }
}

h1, .h1 {
  font-size: 2.25rem;
  line-height: 1.05em;
}
h2, .h2 {
  font-size: 2rem;
  line-height: 1.1em;
}
h3, .h3 {
  font-size: 1.75rem;
  line-height: 1.2em;
}
h4, .h4 {
  font-size: 1.50rem;
  line-height: 1.2em;
}
h5, .h5 {
  font-size: 1.25rem;
  line-height: 1.2em;
}
h6, .h6 {
  font-size: .8rem;
  line-height: 1.2em;
}

.font {
  &--biggest {
    @extend .h3;
  }
  &--bigger {
    @extend .h4;
  }
  &--big {
    @extend .h5;
  }
  &--smaller {
    font-size: .8em;
  }
}

/**
 * Images
 */
img {
  max-width: 100%;
  vertical-align: middle;
}

/**
 * Figures
 */
figure > img {
  display: block;
}

figcaption {
  font-size: $small-font-size;
}

/**
 * Lists
 */
ul, ol {
  margin-left: $spacing-unit;
}

li {
  > ul,
  > ol {
       margin-bottom: 0;
  }
}

/**
 * Headings
 */
h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 {
  font-weight: $font-weight-light;
}

/**
 * Links
 */
a {
  @include cssVar(color, --primary, $primary);
  text-decoration: none;
  transition: color .2s ease(out-cubic);
  &:visited {
    @include cssVar(color, --primary-hue-1, $primary-hue-1);
  }

  &:hover, &:focus {
    @include cssVar(color, --secondary, $secondary);
  }

  &[data-content] {
    position: relative;
    cursor: pointer;
    &:after {
      content: attr(data-content);
      display: block;
      position: absolute;
      overflow: hidden;

      left: 0;
      top: 0;
      min-width: 10rem;
      padding: 0.25rem;

      font-size: $small-font-size;
      line-height: 1.2;
      font-style: normal;
      font-weight: 700;
      //text-align: center;
      
      transform: translate(0%, -100%);
      transition: 
        visibility 0.2s ease(out-cubic)
        opacity 0.2s ease(out-cubic);

      visibility: hidden;
      opacity: 0;
      
      border-radius: 3px;
      @include cssVar('background-color', --secondary, $secondary);
    }
  }
  &:hover, &:focus {
    &:after {
      @include cssVar('color', --bg, $background-color); 
      visibility: visible;
      opacity: 1;
    }
  }
}

button {
  line-height: $base-line-height;
  &:not([disabled]) {
    cursor: pointer;
  }
}

/**
 * Blockquotes
 */
blockquote {
  color: $grey-color;
  border-left: 4px solid $grey-color-light;
  padding-left: $spacing-unit / 2;
  //font-size: 18px;
  //letter-spacing: -1px;
  font-style: italic;

  > :last-child {
      margin-bottom: 0;
  }
}

* {
  box-sizing: border-box;
}


/**
 * Code formatting
 */
pre,
code {
  font-family: $font-code;
  font-size: 0.9em;
  //border: 1px solid $grey-color-light;
  border-radius: 3px;
  //background-color: $grey-color-dark;
}

code {
    padding: 1px 5px;
}

pre {
    padding: 8px 12px;
    overflow-x: auto;

    > code {
        border: 0;
        padding-right: 0;
        padding-left: 0;
    }
}

/**
 * Wrapper
 */
.wrapper {
    max-width: $content-width;
    margin-right: auto;
    margin-left: auto;
    padding: 0 $spacing-unit 0 $spacing-unit;
    @extend %clearfix;
}

/**
 * Clearfix
 */
%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

.hidden {
  display: none;
}

.visually-hidden { 
  border: 0; 
  clip: rect(0 0 0 0); 
  height: 1px; 
  margin: -1px; 
  overflow: hidden; 
  padding: 0; 
  position: absolute; 
  width: 1px; 
}

// Title
.title {
  &__main {
    &:after {
      content: ":";
    }
  }
  &__subtitle {
    display: block;
  }
}

// paddings and margins
@include attr-iterator(padding, $spacing-unit, pad);

// Buttons
.button {
  border: 1px solid transparent;
  @include cssVar(background-color, --text, $text-color);
  @include cssVar(color, --bg, $background-color);

  &:hover {
    // ToDO 
  }
  &__icon {
    position: relative;
    top: -0.125rem;;
  } 
}

