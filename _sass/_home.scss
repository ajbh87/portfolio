$prop: scaleX;
$sec-width: 75%;
$slide-width: 15%;
//----------------------- Home Page
.home {
  position: relative;
}

@include clipAnimation(0, 1, 'expand', 'collapse', 100, $prop);
@keyframes addBorderRadius {
  0% {
    border-radius: 0%;
  }
  40% {
    border-radius: 50%;
  }
  100% {
    border-radius: 50%;
  }
}
@keyframes removeBorderRadius {
  0% {
    border-radius: 50%;
  }
  60% {
    border-radius: 50%;
  }
  100% {
    border-radius: 0%;
  }
}

  
.section {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  width: $sec-width;
  min-height: 50vh;
  z-index: 1;
  @include media-query($media-min){
    width: #{$sec-width - $slide-width};
  };
  &__title {
    position: sticky;
    top: -1px;
    display: block;
    z-index: 1;
    width: 100%;
    padding: ($spacing-unit / 2) $spacing-unit;
    background: $grey-color-lighter;
    transition: opacity .8s ease(out-quad);
    opacity: 0;
    
    &.focused {
      opacity: 1;
    }
    
    &--animate {
      transition: transform .8s ease(out-quad);
      transform: translate(0, -50%);
      .focused & {
        transform: translate(0,0);
      }
    }
    
  }
}

%default-animation {
  $duration: 1s;
  
  animation-duration: $duration;
  animation-iteration-count: 1;
  animation-timing-function: linear;
}
.section-content {
  $origin: left center;
  float: left;
  width: 100%;
  overflow: hidden;
  box-sizing: border-box;
  background: #fff;
  margin-bottom: $spacing-unit;

  transform-origin: $origin;
  transform: $prop + "(0)";
  will-change: transform;
  
  &.unfocused {
    animation-name: collapse;
    @extend %default-animation;
    transform: $prop + "(0)";
  }
  &.focused {
    animation-name: expand;
    @extend %default-animation;
    transform: $prop + "(1)";
  }
  
  &__content {
    clear: both;
    padding: $spacing-unit;

    transform-origin: $origin;
    transform: $prop + "(1000)";
    &.unfocused {
      animation-name: collapseInverse;
      @extend %default-animation;
      transform: $prop + "(1000)";
  }
    &.focused {
      animation-name: expandInverse;
      @extend %default-animation;
      transform: $prop + "(1)";
    }
  }
}

@keyframes pulsate {
  0% {
    transform: scale(1);
    opacity: 0;
  }
  50% {
    opacity: .8;
  }
  100% {
    transform: scale(2);
    opacity: 0;
    
  }
}
.bg-line {
  $height: 250;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  width: 100%;
  height: 100%;
  
  &__svg {
    position: relative;
    width: 100%;
    height: 100%;
    z-index: 0;
  }
  &__straight {
    fill: none;
    stroke: $grey-color;
    stroke-miterlimit: 10;
  }
  &__line {
    $length: 285; // pre calculated unsing  path.getTotalLength() in chrome
    fill: none;
    stroke: $primary;
    stroke-miterlimit: 1;
    stroke-dasharray: $length;
    stroke-dashoffset: $length;
  }
  &__point {
    $offset: 12.5%;
    $offset-plus: 5%;
    $offset-minus: 20%;
    $steps: 5;
    $eHeight: $height / $steps;
    
    $s: 2vw;
    $min: $base-font-size-fixed;
    display: block;
    position: absolute;
    right: $offset;
    width: $s;
    min-width: $min;
    height: $s;
    min-height: $min;
    background: $secondary;
    border-radius: 50%;
    z-index: 1;
    transform: translate(50%, -50%);
    opacity: 0;
    visibility: hidden;
    transition: all .5s ease(out-cubic);
    cursor: pointer;
    
    &:after {
      box-sizing: border-box;
      content: " ";
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      border: 0.15rem solid $secondary-light;
      border-radius: 50%;
      opacity: 0;
      transform: scale(0);
    }
    &--active {
      opacity: 1;
      visibility: visible;
      &:after {
        animation-name: pulsate;
        animation-timing-function: ease(out-cubic);
        animation-duration: 1s;
        animation-iteration-count: infinite;
      }
    }
    &--0 {
      top: 0;
    }
    &--1 {
      $step: 1;
      top: (($step * $eHeight) / $height * 100) * 1%;
      right: $offset-plus;
    }
    &--2 {
      $step: 2;
      top: (($step * $eHeight) / $height * 100) * 1%;
    }
    &--3 {
      $step: 3;
      top: (($step * $eHeight) / $height * 100) * 1%;
      right: $offset-plus;
    }
    &--4 {
      $step: 4;
      top: (($step * $eHeight) / $height * 100) * 1%;
    }
    &--5 {
      $step: 5;
      top: (($step * $eHeight) / $height * 100) * 1%;
    }
  }
}

%slider-animation {
  $duration: .75s;
  
  animation-duration: $duration;
  animation-iteration-count: 1;
  animation-timing-function: linear;
}

.content-slider {
  position: fixed;
  top: 0;
  right: 0;
  z-index: 5;
  height: 80%;
  height: calc(100% - #{$spacing-unit * 2});
  width: 80%;
  width: calc(100% - #{$spacing-unit * 2});
  margin: $spacing-unit;
  overflow: hidden;
  background: $primary;
  color: #fff;
  
  transform-origin: center top;
  transform: translate(0, 100%);
  will-change: transform;
  transition: transform .75s ease(out-quad);
  
  @include media-query($media-min){
    right: 25%;
    height: 100%;
    width: $slide-width;
    margin: 0;
  };
  
  &.focused {
    transform: translate(0, 0);
  }
  
  &__button-close {
    position: absolute; 
    right: 0;
    top: 0;
    display: block;
    width: 1.5rem;
    height: 1.5rem;
    background: transparent;
    @include media-query($media-min){
      display: none;
    }
  }  
  &__content {
    padding: 1.5rem 1rem 1rem 1rem;
    transition: opacity .5s ease(out-quad);
    opacity: 1;
    font-size: .8rem;
    line-height: 1rem;
    @include media-query($media-min){
      padding: 1rem;
    };
    &.fade {
      opacity: 0;
    }
  }
}