:root {
  --bg: #403D3C;
  --bg-2: #c0bcbb;
  --text: #fff;
  --primary: #5AACFF;
  --primary-hue-1: #94C1FF;
  --primary-hue-2: #2E71EA;
  --secondary: #C1E829;
  --secondary-hue-1: #D3EC70;
  --secondary-hue-2: #576812;
  --tertiary: #FF6958;
  --tertiary-hue-1: #CC5446;
  --tertiary-hue-2: #D14642; }

.section-1 {
  --bg: #353332;
  --bg-2: #b6b2b1;
  --primary: #C1E829;
  --primary-hue-1: #D3EC70;
  --primary-hue-2: #576812;
  --secondary: #5AACFF;
  --secondary-hue-1: #94C1FF;
  --secondary-hue-2: #2E71EA;
  --tertiary: #FF6958;
  --tertiary-hue-1: #CC5446;
  --tertiary-hue-2: #D14642; }

.section-2 {
  --bg: #2b2928;
  --bg-2: #aca8a6;
  --primary: #FF6958;
  --primary-hue-1: #CC5446;
  --primary-hue-2: #D14642;
  --secondary: #C1E829;
  --secondary-hue-1: #D3EC70;
  --secondary-hue-2: #576812;
  --tertiary: #5AACFF;
  --tertiary-hue-1: #94C1FF;
  --tertiary-hue-2: #2E71EA; }

.section-3 {
  --bg: #201f1e;
  --bg-2: #a29d9c;
  --primary: #5AACFF;
  --primary-hue-1: #94C1FF;
  --primary-hue-2: #2E71EA;
  --secondary: #FF6958;
  --secondary-hue-1: #CC5446;
  --secondary-hue-2: #D14642;
  --tertiary: #C1E829;
  --tertiary-hue-1: #D3EC70;
  --tertiary-hue-2: #576812; }

.section-4 {
  --bg: #161515;
  --bg-2: #989391;
  --primary: #FF6958;
  --primary-hue-1: #CC5446;
  --primary-hue-2: #D14642;
  --secondary: #5AACFF;
  --secondary-hue-1: #94C1FF;
  --secondary-hue-2: #2E71EA;
  --tertiary: #C1E829;
  --tertiary-hue-1: #D3EC70;
  --tertiary-hue-2: #576812; }

.high-contrast--dark {
  --bg: #161515;
  --bg-2: #989391;
  --text: #fff;
  --primary: #5AACFF;
  --primary-hue-1: #94C1FF;
  --primary-hue-2: #2E71EA;
  --secondary: #C1E829;
  --secondary-hue-1: #D3EC70;
  --secondary-hue-2: #576812;
  --tertiary: #FF6958;
  --tertiary-hue-1: #CC5446;
  --tertiary-hue-2: #D14642; }

.high-contrast--light {
  --bg: #fff;
  --bg-2: whitesmoke;
  --text: #403D3C;
  --primary: #2E71EA;
  --primary-hue-1: #CC5446;
  --primary-hue-2: #D14642;
  --secondary: #CE4946;
  --secondary-hue-1: #94C1FF;
  --secondary-hue-2: #2E71EA;
  --tertiary: #C1E829;
  --tertiary-hue-1: #D3EC70;
  --tertiary-hue-2: #576812; }

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

body, h1, h2, h3, h4, h5, h6,
p, blockquote, pre, hr,
dl, dd, ol, ul, figure {
  margin: 0;
  padding: 0; }

* {
  box-sizing: border-box; }

html {
  font: 400 16px/1.4 "Quicksand", Helvetica, Helvetica Neue, Arial, sans-serif; }
  @media screen and (min-width: 800px) {
    html {
      font-size: 2vw; } }
  @media screen and (min-width: 1750px) {
    html {
      font-size: 35px; } }

body {
  color: #fff;
  color: var(--text);
  background-color: #403D3C;
  background-color: var(--bg);
  transition: 0.2s background-color cubic-bezier(0.215, 0.61, 0.355, 1);
  -webkit-text-size-adjust: 100%;
  -webkit-font-feature-settings: "kern" 1;
  -moz-font-feature-settings: "kern" 1;
  -o-font-feature-settings: "kern" 1;
  font-feature-settings: "kern" 1;
  font-kerning: normal; }

h1, h2, h3, h4, h5, h6,
p, blockquote, pre, hr,
ul, ol, dl, figure,
.experience,
.skill,
.highlight {
  margin-bottom: 1.5rem; }
  h1:last-child, h2:last-child, h3:last-child, h4:last-child, h5:last-child, h6:last-child,
  p:last-child, blockquote:last-child, pre:last-child, hr:last-child,
  ul:last-child, ol:last-child, dl:last-child, figure:last-child,
  .experience:last-child,
  .skill:last-child,
  .highlight:last-child {
    margin-bottom: 0; }

h1, .h1 {
  font-size: 2.25rem;
  line-height: 1.05em; }

h2, .h2 {
  font-size: 2rem;
  line-height: 1.1em; }

h3, .h3, .font--biggest {
  font-size: 1.75rem;
  line-height: 1.2em; }

h4, .h4, .font--bigger {
  font-size: 1.50rem;
  line-height: 1.2em; }

h5, .h5, .font--big {
  font-size: 1.25rem;
  line-height: 1.2em; }

h6, .h6 {
  font-size: .8rem;
  line-height: 1.2em; }

h1, .h1, h2, .h2, h3, .h3, .font--biggest, h4, .h4, .font--bigger, h5, .h5, .font--big, h6, .h6 {
  font-weight: 300; }

.font--smaller {
  font-size: .8em; }

img {
  max-width: 100%;
  vertical-align: middle; }

figure > img {
  display: block; }

figcaption {
  font-size: 0.875rem; }

ul, ol {
  margin-left: 1.5rem; }

li > ul,
li > ol {
  margin-bottom: 0; }

a {
  color: #5AACFF;
  color: var(--primary);
  text-decoration: none;
  transition: color 0.2s cubic-bezier(0.215, 0.61, 0.355, 1); }
  a:visited {
    color: #94C1FF;
    color: var(--primary-hue-1); }
  a:hover, a:focus {
    color: #C1E829;
    color: var(--secondary); }
  a[data-content] {
    position: relative;
    cursor: pointer; }
    a[data-content]:after {
      content: attr(data-content);
      display: block;
      position: absolute;
      overflow: hidden;
      left: 0;
      top: 0;
      min-width: 10rem;
      padding: 0.25rem;
      font-size: 0.875rem;
      line-height: 1.2;
      font-style: normal;
      font-weight: 700;
      transform: translate(0%, -100%);
      transition: visibility 0.2s cubic-bezier(0.215, 0.61, 0.355, 1) opacity 0.2s cubic-bezier(0.215, 0.61, 0.355, 1);
      visibility: hidden;
      opacity: 0;
      border-radius: 3px;
      background-color: #C1E829;
      background-color: var(--secondary); }
  a:hover:after, a:focus:after {
    color: #403D3C;
    color: var(--bg);
    visibility: visible;
    opacity: 1; }

.link:hover .link__icon {
  fill: currentColor; }

.link--with-icon {
  display: flex;
  align-items: center; }

.link__icon {
  margin-right: 0.25rem; }

button {
  line-height: 1.4; }
  button:not([disabled]) {
    cursor: pointer; }

.button {
  border: 1px solid transparent;
  background-color: #fff;
  background-color: var(--text);
  color: #403D3C;
  color: var(--bg); }
  .button__icon {
    position: relative;
    top: -0.125rem; }

.icon {
  height: 1em;
  width: 1em;
  fill: #FF6958;
  fill: var(--tertiary); }

blockquote {
  color: #403D3C;
  border-left: 4px solid #c0bcbb;
  padding-left: 0.75rem;
  font-style: italic; }
  blockquote > :last-child {
    margin-bottom: 0; }

pre,
code {
  font-family: monaco, Consolas, "Lucida Console", monospace;
  font-size: 0.9em;
  border-radius: 3px; }

code {
  padding: 1px 5px; }

pre {
  padding: 8px 12px;
  overflow-x: auto; }
  pre > code {
    border: 0;
    padding-right: 0;
    padding-left: 0; }

.hidden {
  display: none; }

.visually-hidden, .job dt {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.pad--all {
  padding: 1.5rem; }

.pad--top {
  padding-top: 1.5rem; }

.pad--right {
  padding-right: 1.5rem; }

.pad--bottom {
  padding-bottom: 1.5rem; }

.pad--left {
  padding-left: 1.5rem; }

.content, .footer, .summary {
  overflow: hidden;
  width: 100%; }
  @media screen and (min-width: 800px) {
    .content, .footer, .summary {
      width: 75%; } }

.title, .posts, .post, .page, .footer__content, .summary__content {
  display: block;
  clear: both;
  width: 100%;
  padding: 1.5rem; }
  @media screen and (min-width: 800px) {
    .title, .posts, .post, .page, .footer__content, .summary__content {
      float: right;
      max-width: 32rem; } }

.header {
  width: 100%;
  overflow: hidden; }
  @media screen and (min-width: 800px) {
    .header {
      display: flex;
      justify-content: space-between;
      align-items: flex-end; } }
  .header__title {
    display: block;
    overflow: hidden;
    border-bottom: 1px solid #f5f1f1;
    border-color: #5AACFF;
    border-color: var(--primary); }
    @media screen and (min-width: 800px) {
      .header__title {
        flex: 0 0 auto;
        width: 75%; } }
  .header__nav {
    padding: 1.5rem 0.75rem;
    text-align: center; }
    @media screen and (min-width: 800px) {
      .header__nav {
        text-align: right; } }
    .header__nav a {
      font-weight: 700;
      display: inline-block;
      margin-right: 0.75rem; }
      .header__nav a.active {
        color: #FF6958;
        color: var(--tertiary); }
      .header__nav a:last-child {
        margin-right: 0; }
      @media screen and (min-width: 800px) {
        .header__nav a {
          display: block;
          margin-right: 0;
          margin-bottom: 0.375rem; }
          .header__nav a:last-child {
            margin-bottom: 0; } }

.title__main:after {
  content: ":"; }

.title__subtitle {
  display: block; }

.content {
  position: relative;
  border-bottom: 1px solid #f5f1f1;
  border-color: #5AACFF;
  border-color: var(--primary); }

.posts__heading {
  color: #C1E829;
  color: var(--secondary);
  margin-bottom: 1.5rem; }

.posts__list {
  margin-left: 0;
  list-style: none; }
  .posts__list > li {
    margin-bottom: 1.5rem; }

.posts__meta {
  font-size: 0.875rem; }

.posts__link {
  display: block; }

.post__header, .page__header {
  margin-bottom: 0.75rem; }

.post__title, .page__title {
  color: #C1E829;
  color: var(--secondary); }

.social-aside {
  text-align: center; }
  @media screen and (min-width: 800px) {
    .social-aside {
      position: fixed;
      bottom: 0;
      right: 0;
      z-index: 15;
      text-align: left; } }
  .social-aside__list {
    margin: 0;
    list-style: none; }
    .social-aside__list > li {
      display: inline-block;
      margin-right: 0.75rem; }
      .social-aside__list > li:last-child {
        margin-right: 0; }
    @media screen and (min-width: 800px) {
      .social-aside__list > li {
        display: block;
        margin-right: 0; }
      .social-aside__list > li > a {
        transition: background 0.2s cubic-bezier(0.215, 0.61, 0.355, 1), transform 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);
        transform: translate(75%, 0);
        transform: translate(calc(100% - 1.5em - 1rem), 0);
        padding: 0.25rem 0.75rem; }
        .social-aside__list > li > a:hover, .social-aside__list > li > a:focus {
          background: #403D3C;
          background: var(--bg);
          transform: translate(0, 0); }
        .social-aside__list > li > a .icon {
          height: 1.5em;
          width: 1.5em; } }

.footer__social-list {
  list-style: none;
  padding: 0;
  margin-left: 0; }
  .footer__social-list li {
    display: inline-block;
    margin-right: 0.75rem; }
    .footer__social-list li:last-child {
      margin-right: 0; }

.home {
  position: relative; }

.section {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-end;
  width: 80%;
  min-height: 50vh;
  z-index: 1;
  padding: 1.5rem 0;
  border-bottom: 1px solid #f5f1f1;
  border-color: #5AACFF;
  border-color: var(--primary);
  transition: opacity 0.6s cubic-bezier(0.215, 0.61, 0.355, 1);
  opacity: 0; }
  @media screen and (min-width: 800px) {
    .section {
      width: 75%; } }
  .section.focused {
    opacity: 1; }
  .section__content {
    padding: 1.5rem;
    float: right;
    max-width: 32rem; }
  .section__title {
    color: #C1E829;
    color: var(--secondary); }
    .section__title a[data-content] {
      color: #C1E829;
      color: var(--secondary);
      border-bottom: 1px solid #C1E829;
      border-color: #C1E829;
      border-color: var(--secondary); }
      .section__title a[data-content]:hover, .section__title a[data-content]:focus {
        color: #FF6958;
        color: var(--tertiary);
        border-color: #FF6958;
        border-color: var(--tertiary); }
      .section__title a[data-content]:after {
        background-color: #FF6958;
        background-color: var(--tertiary); }

@keyframes pulsate {
  0% {
    transform: scale(1);
    opacity: 0; }
  50% {
    opacity: 0.8; }
  100% {
    transform: scale(2);
    opacity: 0; } }

@keyframes lineGrow {
  0% {
    transform: scaleY(0); }
  100% {
    transform: scaleY(1); } }

.bg-line {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  width: 100%;
  height: 100%; }
  .bg-line__svg {
    position: relative;
    width: 100%;
    height: 100%;
    z-index: 0; }
  .bg-line__straight {
    fill: none;
    stroke: #fff;
    stroke: var(--text);
    stroke-miterlimit: 10; }
  .bg-line__path {
    fill: none;
    stroke: #5AACFF;
    stroke: var(--primary);
    stroke-miterlimit: 1;
    stroke-dasharray: 285;
    stroke-dashoffset: 285; }
  .bg-line__point {
    display: block;
    position: absolute;
    right: 12.5%;
    width: 2vw;
    min-width: 16px;
    height: 2vw;
    min-height: 16px;
    z-index: 1;
    transition: background-color 0.6s cubic-bezier(0.215, 0.61, 0.355, 1);
    background-color: #C1E829;
    background-color: var(--secondary);
    border: 0;
    border-radius: 50%;
    transform: translate(50%, -50%);
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.5s cubic-bezier(0.215, 0.61, 0.355, 1), visibility 0.5s cubic-bezier(0.215, 0.61, 0.355, 1); }
    .bg-line__point:after {
      content: " ";
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      box-sizing: border-box;
      width: 100%;
      height: 100%;
      border-width: 0.15rem;
      border-style: solid;
      transition: border-color 0.6s cubic-bezier(0.215, 0.61, 0.355, 1);
      border-color: #D3EC70;
      border-color: var(--secondary-hue-1);
      border-radius: 50%;
      opacity: 0;
      transform: scale(0); }
    .bg-line__point--active {
      opacity: 1;
      visibility: visible; }
      .bg-line__point--active:after {
        animation-name: pulsate;
        animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
        animation-duration: 1s;
        animation-iteration-count: infinite; }
    .bg-line__point--0 {
      top: 0; }
    .bg-line__point--1 {
      top: 20%;
      right: 5%; }
    .bg-line__point--2 {
      top: 40%; }
    .bg-line__point--3 {
      top: 60%;
      right: 5%; }
    .bg-line__point--4 {
      top: 80%; }
    .bg-line__point--5 {
      top: 100%; }

.job {
  display: flex; }
  .job__info {
    flex: 0 1 10rem;
    font-size: 0.75rem; }
    .job__info dd {
      margin-bottom: 0.25rem; }
  .job__description-cont {
    flex: 2 1 80%; }
    .job__description-cont ul {
      list-style: circle; }
  .job__title {
    font-weight: 700; }
  .job__location {
    display: none;
    font-size: 0.6rem; }
  .job__period {
    font-size: 0.6rem;
    font-weight: 700;
    color: #FF6958;
    color: var(--tertiary); }

.skill {
  display: grid;
  grid-gap: 0.25rem;
  grid-template-columns: 10rem 1fr; }
  .skill__subskills {
    display: grid;
    grid-gap: 0.25rem;
    grid-template-columns: 8.5rem 1fr;
    grid-column: span 2;
    margin-left: 1.5rem; }

/**
 * Syntax highlighting styles
 */
.highlighter-rouge {
  background: #C1E829;
  color: #1C1919; }

.highlight {
  background: #1C1919; }
  .highlight .p {
    color: #c0bcbb; }
  .highlight .c {
    color: #998;
    font-style: italic; }
  .highlight .err {
    color: #a61717;
    background-color: #e3d2d2; }
  .highlight .k {
    color: #5AACFF;
    font-weight: bold; }
  .highlight .o {
    font-weight: bold; }
  .highlight .cm {
    color: #998;
    font-style: italic; }
  .highlight .cp {
    color: #999;
    font-weight: bold; }
  .highlight .c1 {
    color: #998;
    font-style: italic; }
  .highlight .cs {
    color: #999;
    font-weight: bold;
    font-style: italic; }
  .highlight .gd {
    color: #000;
    background-color: #fdd; }
  .highlight .gd .x {
    color: #000;
    background-color: #faa; }
  .highlight .ge {
    font-style: italic; }
  .highlight .gr {
    color: #a00; }
  .highlight .gh {
    color: #999; }
  .highlight .gi {
    color: #000;
    background-color: #dfd; }
  .highlight .gi .x {
    color: #000;
    background-color: #afa; }
  .highlight .go {
    color: #888; }
  .highlight .gp {
    color: #555; }
  .highlight .gs {
    font-weight: bold; }
  .highlight .gu {
    color: #aaa; }
  .highlight .gt {
    color: #a00; }
  .highlight .kc {
    color: #C1E829;
    font-weight: bold; }
  .highlight .kd {
    color: #C1E829;
    font-weight: bold; }
  .highlight .kp {
    color: #C1E829;
    font-weight: bold; }
  .highlight .kr {
    color: #C1E829;
    font-weight: bold; }
  .highlight .kt {
    color: #458;
    font-weight: bold; }
  .highlight .m {
    color: #FF6958; }
  .highlight .s {
    color: #d14; }
  .highlight .na {
    color: #008080; }
  .highlight .nb {
    color: #0086B3; }
  .highlight .nc {
    color: #458;
    font-weight: bold; }
  .highlight .no {
    color: #008080; }
  .highlight .ni {
    color: #800080; }
  .highlight .ne {
    color: #900;
    font-weight: bold; }
  .highlight .nf {
    color: #900;
    font-weight: bold; }
  .highlight .nn {
    color: #555; }
  .highlight .nt {
    color: #000080; }
  .highlight .nv {
    color: #008080; }
  .highlight .ow {
    color: #C1E829;
    font-weight: bold; }
  .highlight .w {
    color: #bbb; }
  .highlight .mf {
    color: #FF6958; }
  .highlight .mh {
    color: #FF6958; }
  .highlight .mi {
    color: #FF6958; }
  .highlight .mo {
    color: #FF6958; }
  .highlight .sb {
    color: #d14; }
  .highlight .sc {
    color: #d14; }
  .highlight .sd {
    color: #d14; }
  .highlight .s2 {
    color: #d14; }
  .highlight .se {
    color: #d14; }
  .highlight .sh {
    color: #d14; }
  .highlight .si {
    color: #d14; }
  .highlight .sx {
    color: #d14; }
  .highlight .sr {
    color: #009926; }
  .highlight .s1 {
    color: #D3EC70; }
  .highlight .ss {
    color: #990073; }
  .highlight .bp {
    color: #999; }
  .highlight .vc {
    color: #008080; }
  .highlight .vg {
    color: #008080; }
  .highlight .vi {
    color: #008080; }
  .highlight .il {
    color: #FF6958; }

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=main.css.map*/