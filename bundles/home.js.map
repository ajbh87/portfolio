{"version":3,"sources":["webpack:///./~/lodash.debounce/index.js","webpack:///./main.scss?1111","webpack:///./src/scrollTrigger.js","webpack:///./src/svgLine.js","webpack:///./home-init.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/lodash.pull/index.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO,YAAY;AAC9B,WAAW,QAAQ;AACnB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,8CAA8C,kBAAkB;AAChb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxXA,yC;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,KAAK;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,YAAY;AAC9B,kBAAkB,OAAO;AACzB,kBAAkB,KAAK;AACvB,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+D;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0D;AACA;AACA;AACA;AACA;AACA,+D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wE;;;;;;;AC7JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,c;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,4BAA4B,gB;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kE;;;;;;;;;;;;;;;;AClLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gEAAgE;AAChE;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA,SAAS;;AAET,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sCAAsC,MAAM;AAC5C;AACA;AACA;AACA,yCAAyC,MAAM,G;AAC/C;AACA;AACA;;;;;;;AC1HA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,MAAM;AACjB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"home.js","sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash.debounce/index.js\n// module id = 1\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./main.scss\n// module id = 2\n// module chunks = 0","/** \r\n * Exports scrollTrigger class.\r\n * @module src/scrollTrigger\r\n * @requires module:src/saKnife saKnife\r\n */\r\nimport debounce from '../node_modules/lodash.debounce/index.js';\r\nimport saKnife from './saKnife.js';\r\n/** \r\n * Yet another scroll trigger js tool.\r\n * When an element gets to a certain point in the viewport (crosses a trigger line) run a function.\r\n * @class scrollTrigger\r\n * @param {object} options\r\n * @property {string} eventName - Custom event name \r\n * @property {number} offset - Trigger line numerical offset.\r\n * @property {string} position - 'center' (default), 'top', 'bottom' | Position of trigger line.\r\n * @property {bool} probe - false (default).\r\n * @property {string} selector - 'Element' selector. Must be data-*.\r\n * @example\r\n * An example invocation showing default parameters, except the functions obviously.\r\n * const ST = new scrollTrigger({\r\n    eventName: 'scrollTrigger',\r\n    offset: 0,\r\n    position: 'center',\r\n    probe: false,\r\n    selector: '[data-scroll-trigger]'\r\n });\r\n * \r\n */\r\nclass scrollTrigger {\r\n    constructor(override) {\r\n        // Merge overrides and defaults into options object\r\n        this.options =  Object.assign({\r\n            selector: '[data-scroll-trigger]',\r\n            eventName: 'scrollTrigger',\r\n            eventNameProbe: 'scrollProbe',\r\n            offset: 0,\r\n            position: 'center',\r\n            probe: false\r\n        }, override);\r\n        // Get window and document size\r\n        this.window = saKnife.winSize();\r\n        this.options.triggerLine = this._getTriggerLine(this.options.position);\r\n\r\n        // Find elements and add them to array\r\n        this.elements = scrollTrigger.generateElementsObj(this.options.selector);\r\n        this.onScrollResize();\r\n        if (this.elements.length > 0) {\r\n            window.addEventListener('scroll', debounce(() => {\r\n                this.onScrollTrigger();\r\n            }, 100));\r\n        }\r\n        if (this.options.probe !== false) {\r\n            window.addEventListener('scroll', () => {\r\n                this.onScrollProbe();\r\n            });\r\n        }\r\n        window.addEventListener('resize', debounce(() => {\r\n            this.onScrollResize();\r\n        }, 200));\r\n    }\r\n    /**\r\n     * Scroll Trigger Elements wrapper\r\n     * @typedef {object} stElement\r\n     * @property {NodeElement} el - Element\r\n     * @property {number} offset - Element offsetObject.\r\n     * @property {bool} active - True/False if is element is active.\r\n     * @property {number} index - Index. Nuff' said.\r\n     */\r\n    /**\r\n     * Generate elements array. Each element is wrapped in a an stElement object.\r\n     * The idea is to precalculate offset position, so that scrolling performance is not impacted\r\n     * by multiple calls to getBoundingClientRect().\r\n     * @param {string} selector - Elements selector.\r\n     * @returns {array} elementArray - An array of stElements\r\n     */\r\n    static generateElementsObj(selector) {\r\n        const elements = document.querySelectorAll(selector);\r\n        let elArray = [];\r\n        elements.forEach((element, index) => {\r\n            let newElement = {\r\n                el: element,\r\n                offset: saKnife.offset(element),\r\n                active: false,\r\n                index\r\n            };\r\n            elArray.push(newElement);\r\n        });\r\n        return elArray;\r\n    }\r\n    _getTriggerLine(position) {\r\n        switch(position) {\r\n        case 'top':\r\n            return 0;\r\n        case 'bottom':\r\n            return this.window.height;\r\n        case 'center':\r\n        default:\r\n            return this.window.vCenter;\r\n        }\r\n    }\r\n    onScrollTrigger() {\r\n        let changed = [];\r\n        this.elements.forEach(element => {\r\n            const scrolled = window.scrollY + this.options.triggerLine,\r\n                bottomTrigger = element.offset.top + element.el.offsetHeight,\r\n                checks = {\r\n                    afterTop: element.offset.top <= scrolled,\r\n                    beforeBottom: scrolled <= bottomTrigger\r\n                };\r\n            let elChanged = null;\r\n            // active | inactive\r\n            if (checks.afterTop && checks.beforeBottom) {\r\n                elChanged = this._toggleActiveInactive(element, true);\r\n            }\r\n            else if (element.active === true) {\r\n                elChanged = this._toggleActiveInactive(element, false);\r\n            }\r\n            elChanged != null ? changed.push(elChanged) : null;  \r\n        });\r\n        if (this.options.event && changed.length > 0) {\r\n            window.dispatchEvent(new CustomEvent(this.options.eventName, {\r\n                detail: changed\r\n            }));\r\n        }\r\n    }\r\n    onScrollProbe() {\r\n        let percentScrolled = saKnife.round((window.scrollY) / \r\n            (this.window.documentHeight - this.window.height), 4);\r\n        \r\n        window.dispatchEvent(new CustomEvent(this.options.eventNameProbe, {\r\n            detail: percentScrolled\r\n        }));\r\n    }\r\n    onScrollResize() {\r\n        this.window = saKnife.winSize();\r\n        this.options.triggerLine = this._getTriggerLine(this.options.position);\r\n        this.elements.forEach(element => {\r\n            element.offset = saKnife.offset(element.el);\r\n        });\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    _toggleActiveInactive(element, active) {\r\n        // set active\r\n        if (element.active === false && active === true) {               \r\n            element.active = true;\r\n            return element;\r\n        }\r\n        // set inactive\r\n        else if (element.active === true && active === false) {         \r\n            element.active = false;\r\n            return element;\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport default scrollTrigger;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scrollTrigger.js\n// module id = 6\n// module chunks = 0","/** \r\n * Exports svgLine class.\r\n * @module src/svgLine \r\n */\r\n/** \r\n * A plugin-less way to manipulate the svg path in the home background.\r\n * @class svgLine \r\n */\r\nclass svgLine {\r\n    constructor(options) {\r\n        const style = getComputedStyle(options.path);\r\n        \r\n        this.el = Object.assign({\r\n            length: parseFloat(style['stroke-dasharray']),\r\n            height: options.path.viewportElement.viewBox.baseVal.height,\r\n            ratios: [],\r\n            triggers: {},\r\n            triggerPad: 0\r\n        }, options);\r\n        this.active = 0;\r\n        this.el.triggers.info = [];\r\n\r\n        if (this.el.triggers.points != null) {\r\n            this.el.ratios = this.getRatios(this.el.triggers.points);\r\n        }\r\n    }\r\n    pathLength(percent){\r\n        const l = this.el.length,\r\n            offset = l * percent,\r\n            newLength = l - offset,\r\n            changePath = () => {\r\n                requestAnimationFrame(() => {\r\n                    this.el.path.style.strokeDashoffset = newLength;\r\n                });\r\n            };         \r\n        this.offset = offset;\r\n        changePath();\r\n\r\n        return newLength;\r\n    }\r\n    reCheck() {\r\n        const checkActive = (index) => {\r\n            const checkForward = (index) => {\r\n                    let nextTrigger = infoArray[index];\r\n                    if (index === infoArray.length) {\r\n                        return index;\r\n                    }\r\n                    if (this.offset === this.el.length) {\r\n                        return infoArray.length;\r\n                    }\r\n                    if (this.offset >= (nextTrigger.val - this.el.triggerPad)) {\r\n                        if (index < infoArray.length - 1) {\r\n                            return checkForward(index + 1);\r\n                        } else {\r\n                            return index;\r\n                        }\r\n                    } else {\r\n                        return index;\r\n                    }\r\n                },\r\n                checkPrev = (index) => {\r\n                    let prevTrigger,\r\n                        prevIndex = index - 1;\r\n                    if (index > 0) {\r\n                        prevTrigger = infoArray[prevIndex];\r\n                        if (this.offset < (prevTrigger.val - this.el.triggerPad)) {\r\n                            if (prevIndex > 0)\r\n                                return checkPrev(index - 1);\r\n                            else \r\n                                return prevIndex;\r\n                        } else {\r\n                            return index;\r\n                        }\r\n                    } else {\r\n                        return index;\r\n                    }\r\n                },\r\n                infoArray =  this.el.triggers.info;\r\n            let next = checkForward(index);\r\n            if (next !== index) {\r\n                return next;\r\n            } else {\r\n                return checkPrev(index);\r\n            }\r\n        };\r\n        this.active = checkActive(this.active);\r\n        return this.active;\r\n    }\r\n    getRatios(triggerPoints) {\r\n        const points = this.el.path.points;\r\n        let ratios = [],\r\n            ys = [];\r\n        triggerPoints.forEach((triggerPoint) => {\r\n            let y = points.getItem(triggerPoint).y,\r\n                newRatio = 0;\r\n            ys.push(y);\r\n\r\n            newRatio = (y / this.el.height) * 100;\r\n            ratios.push(newRatio);\r\n        });\r\n        return ratios;\r\n    }\r\n    setRatios(ratios) {\r\n        const triggerPoints = this.el.triggers.points,\r\n            oldRatios = this.el.ratios;\r\n        let points = this.el.path.points,\r\n            diffs = [],\r\n            triggerInfo = this.el.triggers.info;\r\n            \r\n        if (triggerPoints != null) {\r\n            ratios.forEach((ratio, i) => {\r\n                let triggerIndex = triggerPoints[i],\r\n                    y = points.getItem(triggerIndex).y,\r\n                    ratioDiff = ratio / oldRatios[i],\r\n                    newY = 0;\r\n\r\n                newY = y * ratioDiff;\r\n\r\n                changeTriggerPoint(triggerIndex, i, newY);\r\n                diffs.push(newY);\r\n            });\r\n\r\n            this.el.ratios = ratios;\r\n            this.el.length = triggerInfo[triggerInfo.length - 1].val;\r\n        }\r\n        function changeTriggerPoint(triggerIndex, index, diff) {\r\n            const trigger = points.getItem(triggerIndex);\r\n            let prevTriggerIndex = index > 0 ? triggerPoints[index - 1] : 0,\r\n                prevPoint = ((triggerIndex - 1) >= 0) ? points.getItem(triggerIndex - 1) : null,\r\n                nextPoint = ((triggerIndex + 1) < points.numberOfItems - 1) ? points.getItem(triggerIndex + 1) : null,\r\n                info = triggerInfo[index] != null ? triggerInfo[index] : {};\r\n\r\n            if (info.prevOffset == null && prevPoint != null) {\r\n                if (prevTriggerIndex !== triggerIndex - 1)\r\n                    info.prevOffset = getOffset(prevPoint, trigger);\r\n                else \r\n                    prevPoint = null;\r\n            }\r\n            if (info.nextOffset == null && nextPoint != null) {\r\n                info.nextOffset = getOffset(nextPoint, trigger);\r\n                if (info.nextOffset > Math.abs(info.prevOffset)) \r\n                    nextPoint = null;\r\n            }\r\n\r\n            if (triggerIndex < (points.numberOfItems - 1))\r\n                trigger.y = diff;\r\n\r\n            if (prevPoint != null)\r\n                prevPoint.y = trigger.y + info.prevOffset;\r\n            if (nextPoint != null)\r\n                nextPoint.y = trigger.y + info.nextOffset;\r\n\r\n            triggerInfo[index] = info;\r\n            triggerInfo[index].val = calculateSectionLength();\r\n\r\n            function getOffset(point1, point2) {\r\n                return point1.y - point2.y;\r\n            }\r\n            function calculateSectionLength() {\r\n                let pointIndex = prevTriggerIndex + 1,\r\n                    length = 0;\r\n\r\n                for (pointIndex; pointIndex <= triggerIndex; pointIndex++) {                \r\n                    length += svgLine.distance(points.getItem(pointIndex - 1), points.getItem(pointIndex));\r\n                }\r\n                if (index > 0)\r\n                    length += triggerInfo[index - 1].val;\r\n\r\n                return length;\r\n            }\r\n        }\r\n    }\r\n    static distance(pointSet1, pointSet2) {\r\n        const dx = pointSet2.x - pointSet1.x, \r\n            dy = pointSet2.y - pointSet1.y;\r\n        return Math.hypot(dx, dy);\r\n    }\r\n}\r\nexport default svgLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/svgLine.js\n// module id = 7\n// module chunks = 0","require('./main.scss');\r\nimport scrollTrigger from './src/scrollTrigger.js';\r\nimport svgLine from './src/svgLine.js';\r\nimport saKnife from './src/saKnife.js';\r\nimport debounce from './node_modules/lodash.debounce/index.js';\r\nimport pull from './node_modules/lodash.pull/index.js';\r\n\r\n/** \r\n    Home page scripts.\r\n    @function \r\n    @requires src/saKnife\r\n    @requires src/scrollTrigger    \r\n    @requires node_modules/lodash.debounce\r\n    @requires node_modules/lodash.before\r\n*/\r\nconst homeInit = () => {\r\n    'use strict';\r\n    const BODY = document.querySelector('body'),\r\n        CONTAINER = document.querySelector('.bg-line'),\r\n        SECTIONS = document.querySelectorAll('.section'),\r\n        ST = new scrollTrigger({ probe: true }),\r\n        LINE = new svgLine({\r\n            svg: CONTAINER.querySelector('.bg-line__svg'),\r\n            path: CONTAINER.querySelector('.bg-line__path'),\r\n            pathSelector: '.bg-line__path',\r\n            triggers: {\r\n                points: [1, 4, 7, 10, 11]\r\n            }\r\n        }),\r\n        MARKERS = CONTAINER.querySelectorAll('.bg-line__point'); // needs same # of trigger points\r\n    let sectionRatios = getSectionRatios(),\r\n        active = 0,\r\n        activeMarkers = [],\r\n        inactiveMarkers = [ 0, 1, 2, 3, 4, 5 ];\r\n\r\n    LINE.setRatios(sectionRatios.topArr);\r\n\r\n    window.addEventListener('resize', debounce(onResize, 250));\r\n\r\n    window.addEventListener('scrollProbe', changeLine);\r\n    window.addEventListener('scrollProbe', debounce(reCheckLine, 50));\r\n\r\n    ST.onScrollProbe();\r\n    if (active === 0)\r\n        sectionActive(active);\r\n\r\n    function onResize() {\r\n        sectionRatios = getSectionRatios();\r\n\r\n        LINE.setRatios(sectionRatios.topArr);\r\n        ST.onScrollProbe();\r\n    }\r\n    function getSectionRatios() {\r\n        let cHeight = CONTAINER.offsetHeight,\r\n            posArr = [], // top position array\r\n            ratios = [], // ratio calculation array\r\n            topArr = []; // top calculation array\r\n\r\n        SECTIONS.forEach((element, index) => {\r\n            let marker = MARKERS[index],\r\n                ratio = element.offsetHeight / cHeight,\r\n                lastTop = (index === 0) ? 0 : topArr[topArr.length - 1],\r\n                top = (ratio * 100) + lastTop; // top calculation\r\n            \r\n            marker.style.top = top + '%';\r\n            posArr.push(element.getBoundingClientRect());\r\n            topArr.push(top);\r\n            ratios.push(saKnife.round(ratio, 6));\r\n        });\r\n        \r\n        return { cHeight, posArr, ratios, topArr };\r\n    }\r\n    function changeLine(event) {\r\n        LINE.pathLength(event.detail);\r\n    }\r\n    function reCheckLine() {\r\n        let newActive = LINE.reCheck();\r\n        \r\n        if (active !== newActive) {\r\n            toggleActive(active, newActive);\r\n\r\n            addMarkers(newActive);\r\n            removeMarkers(newActive);\r\n\r\n            active = newActive;\r\n        }\r\n        function addMarkers(active) {\r\n            let toChange = inactiveMarkers.filter( m => m <= active);\r\n            pull(inactiveMarkers, ...toChange);\r\n            activeMarkers = activeMarkers.concat(toChange);\r\n            toChange.forEach( i => {\r\n                if (i > 0)\r\n                    MARKERS[i - 1].classList.add('bg-line__point--active');\r\n            });\r\n        }\r\n        function removeMarkers(active) {\r\n            let toChange = activeMarkers.filter( m => m > active);\r\n            pull(activeMarkers, ...toChange);\r\n            inactiveMarkers = inactiveMarkers.concat(toChange);\r\n            toChange.forEach( i => {\r\n                if (i > 0)\r\n                    MARKERS[i - 1].classList.remove('bg-line__point--active');\r\n            });\r\n        }\r\n    }\r\n    function toggleActive(inactive, active) {\r\n        requestAnimationFrame(() => {\r\n            if (inactive < SECTIONS.length)\r\n                sectionInactive(inactive);\r\n            if (active < SECTIONS.length)\r\n                sectionActive(active);\r\n        });\r\n    }\r\n    function sectionActive(index) {\r\n        SECTIONS[index].classList.add('focused');\r\n        BODY.classList.add(`section-${index}`);\r\n    }\r\n    function sectionInactive(index) {\r\n        SECTIONS[index].classList.remove('focused');\r\n        BODY.classList.remove(`section-${index}`);       \r\n    }\r\n};\r\nwindow.addEventListener('load', homeInit);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./home-init.js\n// module id = 9\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 10\n// module chunks = 0","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Removes all given values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n * to remove elements from an array by predicate.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pull(array, 'a', 'c');\n * console.log(array);\n * // => ['b', 'b']\n */\nvar pull = baseRest(pullAll);\n\n/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pullAll(array, ['a', 'c']);\n * console.log(array);\n * // => ['b', 'b']\n */\nfunction pullAll(array, values) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values)\n    : array;\n}\n\nmodule.exports = pull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash.pull/index.js\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}